{"version":3,"sources":["Api.js","components/Home.js","components/Login.js","components/Logout.js","App.js","reportWebVitals.js","index.js"],"names":["makeAuthenticatedRequest","url","initRequest","token","fetch","headers","Authorization","getUserName","a","process","method","request","json","Home","useAuth0","isAuthenticated","getAccessTokenSilently","isLoading","useState","username","setUsername","useEffect","Api","name","response","getUsername","href","Login","loginWithRedirect","Logout","logout","to","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","domain","clientId","redirectUri","audience","StrictMode","document","getElementById"],"mappings":"gRAEMA,EAA2B,SAACC,EAAKC,EAAaC,GAChD,OAAOC,MAAMH,EAAD,YAAC,eACNC,GADK,IAERG,QAAS,CACLC,cAAc,UAAD,OAAYH,QAK/BI,EAAW,uCAAG,WAAOJ,GAAP,eAAAK,EAAA,sEACMR,EAAyB,GAAD,OAZlCS,sDAYkC,aAAwB,CAClEC,OAAQ,OACTP,GAHa,cACVQ,EADU,gBAKHA,EAAQC,OALL,mFAAH,sDCPXC,EAAO,WAAO,IAAD,EACgDC,cAAvDC,EADO,EACPA,gBAAiBC,EADV,EACUA,uBAAwBC,EADlC,EACkCA,UADlC,EAEmBC,mBAAS,IAF5B,mBAEPC,EAFO,KAEGC,EAFH,KAkBf,OAdAC,qBAAU,YACW,uCAAG,8BAAAb,EAAA,yDACXO,EADW,iEAIIC,IAJJ,cAIVb,EAJU,gBAKGmB,EAAgBnB,GALnB,OAKVoB,EALU,OAOhBH,EAAYG,EAAKC,UAPD,2CAAH,qDAUjBC,KACD,CAACT,EAAwBD,IAExBE,EACO,4CAIP,sCACMF,GACI,mBAAGW,KAAK,6BAAR,0BACLX,GACG,wCAAWI,SC5BrBQ,EAAQ,WAAO,IAAD,EAC+Bb,cAAvCC,EADQ,EACRA,gBAAiBa,EADT,EACSA,kBAEzB,OACI,sCACMb,GACEa,IACHb,GACG,gDCPVc,EAAS,WAAO,IAAD,EACmBf,cAA5BgB,EADS,EACTA,OAER,OAHiB,EACDf,iBAGZe,IACO,cAAC,IAAD,CAAUC,GAAG,0BAGb,iDCSAC,G,MAdH,WACV,OACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,wBAAwBC,OAAQ,EAAOC,UAAYtB,IAC/D,cAAC,IAAD,CAAOoB,KAAK,6BAA6BC,OAAQ,EAAOC,UAAYR,IACpE,cAAC,IAAD,CAAOM,KAAK,8BAA8BC,OAAQ,EAAOC,UAAYN,WCDpEO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAD,CACAC,OAAQtC,kCACRuC,SAAUvC,mCACVwC,YAAY,6CACZC,SAAS,yBAJT,SAKE,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BjB,M","file":"static/js/main.750c890d.chunk.js","sourcesContent":["const API_URL = process.env.REACT_APP_API_URL;\n\nconst makeAuthenticatedRequest = (url, initRequest, token) => {\n    return fetch(url, {\n        ...initRequest,\n        headers: {\n            Authorization: `Bearer ${token}`\n        }\n    });\n};\n\nconst getUserName = async (token) => {\n    const request = await makeAuthenticatedRequest(`${API_URL}/username`, {\n        method: 'GET'\n    }, token);\n\n    return await request.json();\n};\n\n\nexport { getUserName };\n","import { useAuth0 } from \"@auth0/auth0-react\";\nimport { useEffect, useState } from \"react\";\nimport * as Api from '../Api';\n\nconst Home = () => {\n    const { isAuthenticated, getAccessTokenSilently, isLoading } = useAuth0();\n    const [ username, setUsername ] = useState('');\n\n    useEffect(() => {\n        const getUsername = async () => {\n            if (!isAuthenticated) {\n                return;\n            }\n            const token = await getAccessTokenSilently();\n            const name = await Api.getUserName(token);\n\n            setUsername(name.response);\n        };\n\n        getUsername();\n    }, [getAccessTokenSilently, isAuthenticated]);\n\n    if (isLoading) {\n        return <h1>Loading...</h1>\n    }\n\n    return (\n        <>\n            {!isAuthenticated &&\n                  <a href=\"/AdventnaVyzva-React/login\">Please Login</a>}\n            {isAuthenticated &&\n                <h1>Hello {username}</h1>}\n        </>\n    );\n};\n\nexport { Home };\n","import { useAuth0 } from \"@auth0/auth0-react\";\n\n\nconst Login = () => {\n    const { isAuthenticated, loginWithRedirect } = useAuth0();\n    \n    return (\n        <>\n            {!isAuthenticated &&\n                loginWithRedirect()}\n            {isAuthenticated &&\n                <h1>Logged in!</h1>}\n        </>\n    );\n};\n\nexport { Login };\n","import { useAuth0 } from \"@auth0/auth0-react\";\nimport { Redirect } from \"react-router-dom\";\n\n\nconst Logout = () => {\n    const { logout, isAuthenticated } = useAuth0();\n\n    if (isAuthenticated) {\n        logout();\n        return <Redirect to='/AdventnaVyzva-React'/>\n    }\n    else {\n        return <h1>Not logged in!</h1>\n    }\n};\n\nexport { Logout };\n","import { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { Home } from \"./components/Home\";\nimport { Login } from \"./components/Login\";\nimport { Logout } from \"./components/Logout\";\nimport './App.css';\n\n\nconst App = () => {\n  return (\n      <Router>\n          <Switch>\n              <Route path=\"/AdventnaVyzva-React/\" exact={ true } component={ Home } />\n              <Route path=\"/AdventnaVyzva-React/login\" exact={ true } component={ Login } />\n              <Route path=\"/AdventnaVyzva-React/logout\" exact={ true } component={ Logout } />\n          </Switch>\n    </Router>\n  );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Auth0Provider } from '@auth0/auth0-react';\n\nReactDOM.render(\n  <Auth0Provider\n  domain={process.env.REACT_APP_AUTH0_DOMAIN}\n  clientId={process.env.REACT_APP_AUTH0_CLIENT_ID}\n  redirectUri=\"http://localhost:3000/AdventnaVyzva-React/\"\n  audience=\"adventna-vyzva-backend\">\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Auth0Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}