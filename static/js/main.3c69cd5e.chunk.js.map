{"version":3,"sources":["Api.js","App.js","reportWebVitals.js","index.js"],"names":["makeAuthenticatedRequest","url","initRequest","token","fetch","headers","Authorization","getUserName","a","process","method","request","json","Home","useAuth0","isAuthenticated","getAccessTokenSilently","useState","username","setUsername","useEffect","Api","name","console","log","getUsername","href","Login","loginWithRedirect","Logout","logout","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","domain","clientId","redirectUri","window","location","origin","StrictMode","document","getElementById"],"mappings":"wRAEMA,EAA2B,SAACC,EAAKC,EAAaC,GAChD,OAAOC,MAAMH,EAAD,YAAC,eACNC,GADK,IAERG,QAAS,CACLC,cAAc,UAAD,OAAYH,QAK/BI,EAAW,uCAAG,WAAOJ,GAAP,eAAAK,EAAA,sEACMR,EAAyB,GAAD,OAZlCS,sDAYkC,aAAwB,CAClEC,OAAQ,OACTP,GAHa,cACVQ,EADU,gBAKHA,EAAQC,OALL,mFAAH,sDCeXC,EAAO,WAAO,IAAD,EACmCC,cAA5CC,EADS,EACTA,gBAAiBC,EADR,EACQA,uBADR,EAEiBC,mBAAS,IAF1B,mBAETC,EAFS,KAECC,EAFD,KAkBjB,OAdAC,qBAAU,YACS,uCAAG,8BAAAZ,EAAA,sEACEQ,IADF,cACZb,EADY,gBAECkB,EAAgBlB,GAFjB,OAEZmB,EAFY,OAIlBC,QAAQC,IAAIF,GAEZH,EAAYG,GANM,2CAAH,qDASjBG,KACC,CAACT,IAIF,sCACID,GACA,mBAAGW,KAAK,SAAR,0BACDX,GACC,wCAAWG,SAKbS,EAAQ,WAAO,IAAD,EAC6Bb,cAAvCC,EADU,EACVA,gBAAiBa,EADP,EACOA,kBACzB,OACE,sCACIb,GACFa,IAECb,GACD,gDAKAc,EAAS,WAAO,IAAD,EACiBf,cAA5BgB,EADW,EACXA,OAAQf,EADG,EACHA,gBAChB,OACE,qCACGA,GACCe,KAEAf,GACF,oDAKSgB,EA1EH,WACV,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAvB,SACI,cAAC,EAAD,MAGJ,cAAC,IAAD,CAAOD,KAAK,SAASC,OAAO,EAA5B,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOD,KAAK,UAAUC,OAAO,EAA7B,SACE,cAAC,EAAD,YCPKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAD,CACAC,OAAQpC,kCACRqC,SAAUrC,mCACVsC,YAAaC,OAAOC,SAASC,OAH7B,SAIE,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BnB,M","file":"static/js/main.3c69cd5e.chunk.js","sourcesContent":["const API_URL = process.env.REACT_APP_API_URL;\n\nconst makeAuthenticatedRequest = (url, initRequest, token) => {\n    return fetch(url, {\n        ...initRequest,\n        headers: {\n            Authorization: `Bearer ${token}`\n        }\n    });\n};\n\nconst getUserName = async (token) => {\n    const request = await makeAuthenticatedRequest(`${API_URL}/username`, {\n        method: 'GET'\n    }, token);\n\n    return await request.json();\n};\n\n\nexport { getUserName };","import { useAuth0 } from '@auth0/auth0-react';\nimport { useEffect, useState } from 'react';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport './App.css';\nimport * as Api from './Api';\n\nconst App = () => {\n  return (\n    <Router >\n      <Switch>\n        <Route path=\"/\" exact={true}>\n            <Home/>\n        </Route>\n\n        <Route path=\"/login\" exact={true}>\n          <Login/>\n        </Route>\n\n        <Route path=\"/logout\" exact={true}>\n          <Logout/>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nconst Home = () => {\n  const { isAuthenticated, getAccessTokenSilently } = useAuth0();\n  const [ username, setUsername ] = useState('');\n\n  useEffect(() => {\n    const getUsername = async () => {\n      const token = await getAccessTokenSilently();\n      const name = await Api.getUserName(token);\n\n      console.log(name);\n\n      setUsername(name);\n    };\n\n    getUsername();\n  }, [getAccessTokenSilently]);\n\n\n  return (\n    <>\n      {!isAuthenticated &&\n        <a href=\"/login\">Please Login</a>}\n      {isAuthenticated &&\n        <h1>Hello {username}</h1>}\n    </>\n  )\n}\n\nconst Login = () => {\n  const { isAuthenticated, loginWithRedirect } = useAuth0();\n  return (\n    <>\n      {!isAuthenticated &&\n      loginWithRedirect()}\n\n      {isAuthenticated &&\n      <h1>Logged in!</h1>}\n    </>\n  );\n}\n\nconst Logout = () => {\n  const { logout, isAuthenticated } = useAuth0();\n  return (\n    <>\n      {isAuthenticated &&\n        logout()}\n  \n      {!isAuthenticated &&\n      <h1>Not logged in!</h1>}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Auth0Provider } from '@auth0/auth0-react';\n\nReactDOM.render(\n  <Auth0Provider\n  domain={process.env.REACT_APP_AUTH0_DOMAIN}\n  clientId={process.env.REACT_APP_AUTH0_CLIENT_ID}\n  redirectUri={window.location.origin}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Auth0Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}